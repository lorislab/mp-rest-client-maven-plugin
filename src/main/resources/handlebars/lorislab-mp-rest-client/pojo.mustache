import java.util.Objects;
{{#lombokData}}
    import lombok.Data;
{{/lombokData}}
{{#jackson}}
    import com.fasterxml.jackson.annotation.JsonProperty;
    import com.fasterxml.jackson.annotation.JsonValue;{{/jackson}}
{{#jsonb}}
    import javax.json.bind.annotation.JsonbProperty;
{{/jsonb}}

{{#description}}
/**
* {{description}}
**/{{/description}}
{{#discriminator}}{{>typeInfoAnnotation}}{{/discriminator}}
{{#description}}{{/description}}
{{#lombokData}}@Data{{/lombokData}}
{{#modelAnnotations}}@{{{.}}}
{{/modelAnnotations}}
public class {{classname}} {{#parent}}extends {{{parent}}}{{/parent}} {{#serializableModel}}implements Serializable{{/serializableModel}} {

  {{#vars}}
  {{#isEnum}}
  {{^isContainer}}
{{>enumClass}}
  {{/isContainer}}
  {{/isEnum}}
  {{#items.isEnum}}
  {{#items}}

  {{^isContainer}}
  {{>enumClass}}
  {{/isContainer}}
  {{/items}}
  {{/items.isEnum}}

  {{^generateGetterSetter}}
  {{#jackson}}@JsonProperty(value="{{baseName}}", required={{required}}){{/jackson}}{{#jsonb}}@JsonbProperty("{{baseName}}"){{/jsonb}}
  {{/generateGetterSetter}}
  {{#fieldPublic}}public{{/fieldPublic}}{{^fieldPublic}}private{{/fieldPublic}} {{#useBeanValidation}}@Valid{{/useBeanValidation}} {{{datatypeWithEnum}}} {{name}} = {{{defaultValue}}};
  {{/vars}}

  {{#generateGetterSetter}}
  {{#vars}}

  /**
   {{#description}}
   * {{description}}
   {{/description}}
   {{#minimum}}
   * minimum: {{minimum}}
   {{/minimum}}
   {{#maximum}}
   * maximum: {{maximum}}
   {{/maximum}}
   **/
  public {{classname}} {{name}}({{{datatypeWithEnum}}} {{name}}) {
    this.{{name}} = {{name}};
    return this;
  }

  {{#vendorExtensions.extraAnnotation}}{{{vendorExtensions.extraAnnotation}}}{{/vendorExtensions.extraAnnotation}}

  {{#jackson}}@JsonProperty("{{baseName}}"){{/jackson}}{{#jsonb}}@JsonbProperty("{{baseName}}"){{/jsonb}}
  {{#useBeanValidation}}
{{>beanValidation}}
  {{/useBeanValidation}}

  public {{{datatypeWithEnum}}} {{#isBoolean}}is{{/isBoolean}}{{getter}}() {
    return {{name}};
  }
  public void {{setter}}({{{datatypeWithEnum}}} {{name}}) {
    this.{{name}} = {{name}};
  }

  {{/vars}}
  {{/generateGetterSetter}}

{{#generateEquals}}
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    {{classname}} {{classVarName}} = ({{classname}}) o;{{#hasVars}}
    return {{#vars}}Objects.equals({{name}}, {{classVarName}}.{{name}}){{#hasMore}} &&
        {{/hasMore}}{{^hasMore}};{{/hasMore}}{{/vars}}{{/hasVars}}{{^hasVars}}
    return true;{{/hasVars}}
  }

  @Override
  public int hashCode() {
    return Objects.hash({{#vars}}{{name}}{{#hasMore}}, {{/hasMore}}{{/vars}});
  }

{{/generateEquals}}

{{#generateToString}}
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class {{classname}} {\n");
    {{#parent}}sb.append("    ").append(toIndentedString(super.toString())).append("\n");{{/parent}}
    {{#vars}}sb.append("    {{name}}: ").append(toIndentedString({{name}})).append("\n");
    {{/vars}}sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
{{/generateToString}}

}
